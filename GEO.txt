-- Initialize the Geoscanner peripheral.
local geoscanner = peripheral.wrap("right")

-- Check if Geoscanner peripheral is found.
if geoscanner then
    -- Define the coordinates of the current chunk.
    local chunkX, chunkZ = math.floor(gps.locate())
    local minY, maxY = -20, 30  -- Set the Y-level range from -20 to 30.
    
    -- Create a table to store ore information.
    local ores = {}
    
    -- Initialize progress and ore count variables.
    local totalBlocks = (maxY - minY + 1) * 16 * 16
    local scannedBlocks = 0
    local oreCount = 0
    
    -- Delete the existing "ORES.txt" file if it exists.
    if fs.exists("ORES.txt") then
        fs.delete("ORES.txt")
    end
    
    -- Open the "ORES.txt" file for writing.
    local file = fs.open("ORES.txt", "w")
    
    -- Create a function to update the progression bar.
    local function updateProgress()
        term.clear()
        term.setCursorPos(1, 1)
        print("Scanning Progress: " .. scannedBlocks .. " / " .. totalBlocks)
        print("Ores Found: " .. oreCount)
        
        local progress = scannedBlocks / totalBlocks
        local barLength = 20
        local progressChars = math.floor(barLength * progress)
        local progressBar = "[" .. string.rep("=", progressChars) .. string.rep(" ", barLength - progressChars) .. "]"
        print("Progress: " .. progressBar)
    end
    
    -- Iterate through the chunk and scan for ores.
    for y = minY, maxY do
        for x = 1, 16 do
            for z = 1, 16 do
                local blockData = geoscanner.scan(x, y, z)
                scannedBlocks = scannedBlocks + 1
                
                -- Update progress.
                updateProgress()
                
                if blockData and blockData.state == "ore" then
                    local oreName = blockData.name
                    local oreAmount = blockData.count
                    
                    -- Store ore information in the table.
                    table.insert(ores, {
                        name = oreName,
                        amount = oreAmount,
                        x = chunkX * 16 + x,
                        y = y,
                        z = chunkZ * 16 + z
                    })
                    
                    -- Increment the ore counter.
                    oreCount = oreCount + 1
                    
                    -- Write ore information to the file.
                    file.writeLine("Ore: " .. oreName)
                    file.writeLine("Amount: " .. oreAmount)
                    file.writeLine("Coordinates: X=" .. ore.x .. " Y=" .. ore.y .. " Z=" .. ore.z)
                    file.writeLine("--------")
                end
            end
        end
    end
    
    -- Close the file.
    file.close()
    
    -- Display a completion message with the ore count.
    term.clear()
    term.setCursorPos(1, 1)
    print("Scan results saved to 'ORES.txt'")
    print("Ores Found: " .. oreCount)
else
    -- Display a message if the Geoscanner is not found.
    print("Geoscanner not found.")
end
